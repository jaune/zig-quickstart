permissions:
  contents: write

name: release
on: [workflow_dispatch]
jobs:
  variables:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: compute-variables
        uses: actions/github-script@v7
        id: variables
        with:
          result-encoding: string
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/workflows/scripts/compute-variables/index.mjs');
            return await script({ github, context, core, exec, glob, io, fetch, __original_require__ });
    outputs:
      zig-verison: ${{steps.variables.outputs.zig-version}}
      short-sha: ${{steps.variables.outputs.short-sha}}
      branch-name: ${{steps.variables.outputs.branch-name}}
      release-tag: ${{steps.variables.outputs.release-tag}}

  build-windows-artifacts:
    needs: [variables]
    strategy:
      matrix:
        os: [windows]
        arch: [x86_64, aarch64]
      fail-fast: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
        with:
          version: ${{needs.variables.outputs.zig-verison}}
      - run: |
          zig build -Dtarget=${{matrix.arch}}-${{matrix.os}} -Doptimize=ReleaseSafe --summary all
      - run: |
          Compress-Archive -Path ./zig-out/bin/* -Destination zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.zip
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{matrix.os}}-${{matrix.arch}}
          path: |
            ./zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.zip

  build-macos-artifacts:
    needs: [variables]
    strategy:
      matrix:
        os: [macos]
        arch: [x86_64, aarch64]
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
        with:
          version: ${{needs.variables.outputs.zig-verison}}
      - run: |
          zig build -Dtarget=${{matrix.arch}}-${{matrix.os}} -Doptimize=ReleaseSafe --summary all
      - run: |
          tar -cJf ./zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.tar.xz ./zig-out/bin/*
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{matrix.os}}-${{matrix.arch}}
          path: |
            ./zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.tar.xz

  build-linux-artifacts:
    needs: [variables]
    strategy:
      matrix:
        os: [linux]
        arch: [x86_64, aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
        with:
          version: ${{needs.variables.outputs.zig-verison}}
      - run: |
          zig build -Dtarget=${{matrix.arch}}-${{matrix.os}} -Doptimize=ReleaseSafe --summary all
      - run: |
          tar -cJf ./zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.tar.xz ./zig-out/bin/*
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{matrix.os}}-${{matrix.arch}}
          path: |
            ./zig-quickstart-${{matrix.os}}-${{matrix.arch}}-${{needs.variables.outputs.release-tag}}.tar.xz

  create-release:
    runs-on: ubuntu-latest
    needs: [variables, build-linux-artifacts, build-macos-artifacts, build-windows-artifacts]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: artifact-*
          merge-multiple: true
      - run: ls -R artifacts

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/*
          prerelease: true
          draft: false
          name: ${{ needs.variables.outputs.release-tag }}
          tag_name: ${{ needs.variables.outputs.release-tag }}
